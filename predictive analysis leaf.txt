import serial
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler

# Load or Train the Model (Use Previous Code for Training)
df = pd.read_csv("plant_health_data.csv")
df['LeafColor'] = df['LeafColor'].map({'Green': 0, 'Yellow': 1, 'Brown': 2})

X = df[['LeafColor', 'Moisture', 'Humidity', 'AirQuality']]
y = df['HealthScore']

model = LinearRegression()
model.fit(X, y)


arduino = serial.Serial('COM3', 9600)  
scaler = StandardScaler()
scaler.fit(X)  

while True:
    try:
        data = arduino.readline().decode().strip()  
        values = list(map(float, data.split(",")))  

        if len(values) == 5:
            humidity, temp, air_quality, moisture, leaf_color = values

            # Normalize Input
            input_data = np.array([[leaf_color, moisture, humidity, air_quality]])
            input_data = scaler.transform(input_data)

            # Predict Health Score
            health_score = model.predict(input_data)[0]
            print(f"Predicted Plant Health Score: {health_score:.2f}/100")

    except Exception as e:
        print(f"Error: {e}")
